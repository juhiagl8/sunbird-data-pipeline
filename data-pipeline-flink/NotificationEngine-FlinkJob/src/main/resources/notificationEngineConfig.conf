include "base-config.conf"

kafka {
  output.topic = "output"
  input.topic = "input"
  notification_preference_input.topic="notification"
  groupId = "notification_engine"
  success.topic = "success"
  bootstrap_server="localhost:9092"
}

task {
  notification_engine_parallelism = 1
  notification_preference_parallelism = 1
}

kafka-key{
 key_serializer="key.serializer"
 value_serializer="value.serializer"
 key_deserializer="key.deserializer"
  value_deserializer="value.deserializer"
  bootstrap_servers="bootstrap.servers"
}

ext-cassandra {
  host = "localhost"
  port = "9042"
  sunbird_keyspace="sunbird"
  EMAIL_RECORD_TABLE="email_record"
  keyspace = "sunbird"
  user_content_db_table = "user_content_consumption"
  courses_keyspace = "sunbird_courses"
  dev_hierarchy_store_keyspace="dev_hierarchy_store"
  content_hierarchy_table="content_hierarchy"
  user_table="user"
  exclude_user_emails_table="exclude_user_emails"
  table = "assessment_aggregator"
}

fields{
   search_fields="name,appIcon,instructions,description,purpose,mimeType,gradeLevel,identifier,medium,pkgVersion,board,subject,resourceType,primaryCategory,contentType,channel,organisation,trackable,license,posterImage,idealScreenSize,learningMode,creatorLogo,duration,version"
}

url{
  km_base_host="https://portal.igot-dev.in/api/"
  content_search="content/v1/search"
  course_url="https://portal.igot-dev.in/app/toc/"
  sb_service_url="http://localhost:9000/"
  sunbird_user_search_endpoint="private/user/v1/search"
  notification_service_host="http://localhost:9000/"
  notification_event_endpoint="v1/notification/send/sync"
  overview_batch="/overview?batchId"
}

mailList{
 recipient_new_course_email="juhi.agarwal@tarento.com,manas.swain@tarento.com"
}

senderMail{
sender_mail="support@igot-dev.in"
}

key{
 sb_api_key="apiKey"
}

ES{
 sb_es_user_profile_index="user_alias"
 es_profile_index_type="_doc"
 es_preference_index_type="_search"
 sb_es_user_notification_preference="notify_preference"
}

const{
 latest_courses_alert_send_to_all_user=true
}

fields{
  email_search_fields="userId,profileDetails.personalDetails.primaryEmail"
}

consumerKey{
   incomplete_course_alert_message_key="courseReminder"
   latest_course_alert_message_key="latestCourse"
}

redis {
  database {
    relationCache.id = 10
    contentCache.id = 0
  }
}
